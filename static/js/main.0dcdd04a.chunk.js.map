{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/App.module.css","transitions/pop.module.css","components/ContactList/ContactList.module.css","transitions/slide.module.css","components/Filter/Filter.module.css","components/Message/Message.module.css","transitions/appear.module.css","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Message/Message.js","components/App.js","services/localStorage.js","index.js","components/Contact/Contact.module.css"],"names":["module","exports","Contact","name","number","handleDeleteContact","className","styles","contactWrap","contact","deleteBtn","type","onClick","ContactList","contacts","TransitionGroup","component","contactList","map","CSSTransition","key","id","timeout","unmountOnExit","classNames","slideTransition","Filter","value","handleChangeFilter","search","onChange","placeholder","ContactForm","state","inputIds","nameId","shortid","generate","numberId","handleChange","e","target","setState","handleSubmit","preventDefault","handleAddContact","props","resetForm","this","contactForm","onSubmit","htmlFor","label","inputName","input","submitBtn","Component","Message","container","notyf","Notyf","App","filter","contactExists","addContact","newContact","trim","error","match","findMatchingContact","prevState","setTimeout","success","deleteContact","changeFilter","filterContacts","query","toLowerCase","includes","find","persistedContacts","localStorage","getItem","undefined","JSON","parse","err","Error","prevProps","contactsToSave","stringify","setItem","filteredContacts","wrapper","in","appearTransition","appear","heading","length","popTransition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0dcdd04a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../variables.module.css'\",\"color-dark-grey\":\"#3b3b42\",\"primary-box-shadow\":\"1px 1px 5px 1px #D3D3D3\",\"contactForm\":\"ContactForm_contactForm__2qQgA\",\"label\":\"ContactForm_label__3tSrr\",\"inputName\":\"ContactForm_inputName__1S3Lc\",\"input\":\"ContactForm_input__15aRt\",\"submitBtn\":\"ContactForm_submitBtn__2Ebke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../variables.module.css'\",\"primary-font-stack\":\"Roboto, sans-serif\",\"wrapper\":\"App_wrapper__1PiIG\",\"heading\":\"App_heading__HGgW1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__YErH7\",\"enterActive\":\"pop_enterActive__13IuT\",\"exit\":\"pop_exit__iCgEG\",\"exitActive\":\"pop_exitActive__2F_qT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1BjtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3BfUm\",\"enterActive\":\"slide_enterActive__2PMIk\",\"exit\":\"slide_exit__1p_6p\",\"exitActive\":\"slide_exitActive__2hq40\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../variables.module.css'\",\"color-dark-grey\":\"#3b3b42\",\"color-light-grey\":\"#8c8c8d\",\"search\":\"Filter_search__1SIBa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__Np4Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appear_appear__27F9F\",\"appearActive\":\"appear_appearActive__1n7AV\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number, handleDeleteContact }) => (\n  <div className={styles.contactWrap}>\n    <p className={styles.contact}>\n      <span className={styles.name}>{name}</span>:{' '}\n      <span className={styles.number}>{number}</span>\n    </p>\n    <button\n      className={styles.deleteBtn}\n      type=\"button\"\n      onClick={handleDeleteContact}\n    >\n      Delete\n    </button>\n  </div>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact';\nimport styles from './ContactList.module.css';\nimport slideTransition from '../../transitions/slide.module.css';\n\nconst ContactList = ({ contacts, handleDeleteContact }) => (\n  <TransitionGroup component=\"ul\" className={styles.contactList}>\n    {contacts.map(contact => (\n      <CSSTransition\n        key={contact.id}\n        timeout={250}\n        unmountOnExit\n        classNames={slideTransition}\n      >\n        <li>\n          <Contact\n            name={contact.name}\n            number={contact.number}\n            handleDeleteContact={() => handleDeleteContact(contact.id)}\n          />\n        </li>\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n  handleDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, handleChangeFilter }) => {\n  return (\n    <input\n      className={styles.search}\n      type=\"text\"\n      value={value}\n      onChange={handleChangeFilter}\n      placeholder=\"Find contact...\"\n    />\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    handleAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  inputIds = {\n    nameId: shortid.generate(),\n    numberId: shortid.generate(),\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { handleAddContact } = this.props;\n    handleAddContact(name, number);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { nameId, numberId } = this.inputIds;\n\n    return (\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n        <label htmlFor={nameId} className={styles.label}>\n          <span className={styles.inputName}>Enter name:</span>\n          <input\n            id={nameId}\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name...\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor={numberId} className={styles.label}>\n          <span className={styles.inputName}>Enter number:</span>\n          <input\n            id={numberId}\n            className={styles.input}\n            type=\"text\"\n            name=\"number\"\n            placeholder=\"Enter phone number...\"\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={styles.submitBtn}>\n          Save contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport styles from './Message.module.css';\n\nconst Message = () => {\n  return (\n    <div className={styles.container}>\n      <p>Contact already exists!</p>\n    </div>\n  );\n};\n\nexport default Message;\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport shortid from 'shortid';\nimport { Notyf } from 'notyf';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport ContactForm from './ContactForm/ContactForm';\nimport Message from './Message/Message';\nimport * as localStorage from '../services/localStorage';\nimport styles from './App.module.css';\nimport popTransition from '../transitions/pop.module.css';\nimport appearTransition from '../transitions/appear.module.css';\nimport 'notyf/notyf.min.css';\n\nconst notyf = new Notyf();\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    contactExists: false,\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getContacts();\n\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.saveContacts(contacts);\n    }\n  }\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (newContact.name.trim() === '' || newContact.number.trim() === '') {\n      return notyf.error('Please fill out the form');\n    }\n    if (\n      !newContact.number.match(/^(\\+38|\\+3)?[\\s-]?(\\(?[\\d]*\\))?[\\d\\s\\- ]*$/)\n    ) {\n      return notyf.error('Wrong number format');\n    }\n\n    const matchingContact = this.findMatchingContact(contacts, newContact.name);\n\n    if (matchingContact) {\n      return this.setState(\n        prevState => ({ contactExists: !prevState.contactExists }),\n        () =>\n          setTimeout(() => {\n            this.setState(prevState => ({\n              contactExists: !prevState.contactExists,\n            }));\n          }, 2000),\n      );\n    }\n\n    this.setState(\n      prevState => ({\n        contacts: [...prevState.contacts, newContact],\n      }),\n      () => notyf.success('Contact added'),\n    );\n\n    return newContact;\n  };\n\n  deleteContact = id => {\n    this.setState(\n      prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\n      }),\n      () => notyf.success('Contact deleted'),\n    );\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  filterContacts = (contacts, query) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(query.toLowerCase()),\n    );\n  };\n\n  findMatchingContact = (contacts, name) =>\n    contacts.find(contact => contact.name === name);\n\n  render() {\n    const { contacts, filter, contactExists } = this.state;\n    const filteredContacts = this.filterContacts(contacts, filter);\n\n    return (\n      <div className={styles.wrapper}>\n        <CSSTransition in timeout={500} classNames={appearTransition} appear>\n          <h1 className={styles.heading}>Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm handleAddContact={this.addContact} />\n\n        <h2 className={styles.heading}>Contacts</h2>\n\n        <CSSTransition\n          in={contacts.length > 1}\n          timeout={250}\n          classNames={popTransition}\n          unmountOnExit\n        >\n          <Filter value={filter} handleChangeFilter={this.changeFilter} />\n        </CSSTransition>\n\n        {contacts.length > 0 && (\n          <ContactList\n            contacts={filteredContacts}\n            handleDeleteContact={this.deleteContact}\n          />\n        )}\n\n        <CSSTransition\n          in={contactExists}\n          timeout={250}\n          classNames={popTransition}\n          unmountOnExit\n        >\n          <Message />\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const getContacts = () => {\n  try {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    return persistedContacts === null\n      ? undefined\n      : JSON.parse(persistedContacts);\n  } catch (err) {\n    throw new Error('Get state error: ', err);\n  }\n};\n\nexport const saveContacts = contacts => {\n  try {\n    const contactsToSave = JSON.stringify(contacts);\n    localStorage.setItem('contacts', contactsToSave);\n  } catch (err) {\n    throw new Error('Get state error: ', err);\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../variables.module.css'\",\"color-dark-grey\":\"#3b3b42\",\"primary-box-shadow\":\"1px 1px 5px 1px #D3D3D3\",\"contactWrap\":\"Contact_contactWrap__3lEQ6\",\"contact\":\"Contact_contact__Slp3Z\",\"name\":\"Contact_name__3Odw0\",\"number\":\"Contact_number__36toT\",\"deleteBtn\":\"Contact_deleteBtn__wHiNu\"};"],"sourceRoot":""}